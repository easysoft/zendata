欢迎使用ZTF自动化测试框架工具。

为了方便在任意目录中执行命令，建议您将ZTF加入环境变量中，具体方法参照以下地址：
https://ztf.im/book/ztf/add-to-path-46.html

用法
   ztf [功能] [命令] [参数]

功能
   set             -s            交互式设置语言、禅道地址、登录账号等，用户需要对ZTF目录有写权限。
   co              checkout      将禅道中的测试用例导出为脚本，已存在时将更新用例标题和步骤描述。可指定产品、套件、测试单编号。
   run             -r            执行测试用例。可指定目录、套件、脚本、结果文件路径，以及套件和任务编号，多个文件间用空格隔开。
   ci                            将脚本中的用例信息同步到禅道。
   cr                            将用例执行结果提交到禅道。
   cb                            提交测试结果中失败的用例作为禅道缺陷。
   expect                        分析脚本以生成独立的期待结果.exp文件。
   extract                       提取脚本中的注释，生成用例步骤和期待结果。
   ls         -l                 查看测试用例列表，可指定目录和文件的列表，之间用空格隔开。
   view            -v            查看测试用例详情，可指定目录和文件的列表，之间用空格隔开。
   clean           -c            清除脚本执行日志。
   version                       查看ZTF版本。

示例
$>ztf set                                                             交互式设置语言、禅道地址、登录账号等，用户需要对ZTF目录有写权限。

$>ztf run demo/lang/bat                                               执行演示目录bat下的脚本，支持多个目录和文件参数项。
$>ztf run demo/autoit                                                 执行ZTF自带AutoIT脚本。
$>ztf run demo/selenium/chrome.php --interp runtime/php/php7/php.exe  执行ZTF自带Selenium脚本，使用指定PHP解释器。
$>ztf run demo/appium/android.php --interp runtime/php/php7/php.exe   执行ZTF自带Appium脚本，使用指定PHP解释器。

$>ztf co -product 1 -language python                                  导出编号为1的产品的测试用例，使用python语言。-product参数缩写为-p；-language参数缩写为-l。
$>ztf co -p 1 -m 15 -l python                                         导出产品编号为1、模块编号为15的测试用例。
$>ztf co -s 1 -l python -i true                                       导出编号为1的套件下的测试用例，将期待结果保存在独立文件中。-suite参数缩写为-s。
$>ztf co -t 1 -l python                                               导出编号为1的测试单下的测试用例。

$>ztf run product01 product01/all.cs                                  执行product01目录下all.cs脚本中的测试用例。
$>ztf run log/001/result.txt                                          执行log/001目录下result.txt结果文件中的失败用例。
$>ztf run product01 -s 1                                              执行禅道中编号为1的套件下的测试用例，脚本位于product01目录。
$>ztf run -task 1                                                     执行禅道中编号为1的任务，脚本位于当前目录。-task参数缩写为-t。
$>ztf run product/product01 -C 2 -p 1 -t task1 -cr -cb                执行product/product01目录下的脚本，设置执行并发数为2，将测试结果提交到禅道，并将失败结果提交成禅道缺陷。-C指定并发数（默认为1；-p必填参数指定产品ID；-t可选参数指定任务ID；-cr提交结果，-cb提交缺陷;。
$>ztf junit -p 1 mvn clean package test                               执行junit单元测试脚本，更多请参照手册https://ztf.im/book/ztf-doc/ztf-about-26.html。

$>ztf expect demo/sample/1_simple.php                                 在demo/sample目录下，生成对应1_simple.php脚本的.exp期待结果文件。
$>ztf extract demo/sample/8_extract_desc.php                          提取脚本中的注释，生成用例步骤和期待结果。
$>ztf ci product01/tc-1.py                                            将脚本里修改的测试用例信息同步到禅道。
$>ztf cr log/001 -p 1                                                 提交测试结果到禅道，指定了编号为1的产品。
$>ztf cr log/001 -p 1 -t 1 -y                                         提交测试结果到禅道。指定了编号为1的测试单。其中-t参数指定测试单ID，-y参数忽略确认。
$>ztf cb log/001 -p 1                                                 提交测试结果中失败的用例作为禅道缺陷。

$>ztf list demo/lang/bat                                              列出演示目录bat下的所有脚本文件，支持多个目录和文件参数项。
$>ztf ls demo/lang/bat -k 0                                           列出demo/lang/bat目录下ID为0的脚本。
$>ztf -l demo/lang/bat -k pattern                                     列出demo/lang/bat目录下标题包含'pattern'的脚本。

$>ztf view demo/lang/shell/1_string_match.shell                       查看 demo/lang/shell目录下的脚本信息，支持多个参数项。
$>ztf -v demo/lang/bat -k 0                                           查看 demo/lang/bat目录下ID为0的脚本信息。
$>ztf -v demo/lang/bat -k word                                        查看 demo/lang/bat目录下标题包含'pattern'的脚本信息。

$>ztf clean                                                           清除所有测试执行日志，缩写-c。

--verbose为全局调试参数，用于显示详细日志，如Http请求、响应、错误等信息。
使用“ztf [功能] --help 或 -h”获取相关功能的更多信息。

